{"ast":null,"code":"// import { createSlice } from \"@reduxjs/toolkit\";\n// import { STATUS } from \"../utils/enums\";\n// import { db } from \"../db/firebase\";\n// import {\n//   doc,\n//   setDoc,\n//   getDoc,\n//   getDocs,\n//   deleteDoc,\n//   collection,\n// } from \"firebase/firestore\";\n// import { fetchCartItems } from \"./cartSlice\";\n// const savedItemsSlice = createSlice({\n//   name: \"savedItems\",\n//   initialState: {\n//     savedItems: [],\n//     status: STATUS.IDLE,\n//   },\n//   reducers: {\n//     setsavedItems: (state, action) => ({\n//       ...state,\n//       savedItems: action.payload,\n//     }),\n//     setStatus: (state, action) => ({\n//       ...state,\n//       status: action.payload,\n//     }),\n//   },\n// });\n// export const { setsavedItems, setStatus } = savedItemsSlice.actions;\n// export default savedItemsSlice.reducer;\n// const savedItemsColl = collection(db, \"saveditems\");\n// export const fetchSavedItems = () => {\n//   return function fetchSavedItemsThunk(dispatch) {\n//     dispatch(setStatus(STATUS.LOADING));\n//     getDocs(savedItemsColl)\n//       .then((snapshot) => {\n//         const payload = snapshot.docs.map((doc) => ({\n//           id: doc.id,\n//           ...doc.data(),\n//         }));\n//         dispatch(setsavedItems(payload));\n//         dispatch(setStatus(STATUS.IDLE));\n//       })\n//       .catch(() => dispatch(setStatus(STATUS.ERROR)));\n//   };\n// };\n// export const saveForLater =\n//   ({ id, title, price, image }) =>\n//   (dispatch) => {\n//     const cartItemDoc = doc(db, \"cartitems\", id);\n//     dispatch(setStatus(STATUS.LOADING));\n//     deleteDoc(cartItemDoc)\n//       .then(() => {\n//         dispatch(fetchCartItems());\n//         const savedItemDoc = doc(db, \"saveditems\", id);\n//         getDoc(savedItemDoc).then((docSnap) => {\n//           if (!docSnap.exists()) {\n//             setDoc(doc(savedItemsColl, id), {\n//               title,\n//               price,\n//               image,\n//             });\n//             dispatch(fetchSavedItems());\n//           }\n//         });\n//       })\n//       .catch(() => dispatch(setStatus(STATUS.ERROR)));\n//   };","map":{"version":3,"names":[],"sources":["D:/EDU/PROJECTS/Clones/amazon-clone/client/src/redux/savedItemsSlice.js"],"sourcesContent":["// import { createSlice } from \"@reduxjs/toolkit\";\r\n// import { STATUS } from \"../utils/enums\";\r\n// import { db } from \"../db/firebase\";\r\n// import {\r\n//   doc,\r\n//   setDoc,\r\n//   getDoc,\r\n//   getDocs,\r\n//   deleteDoc,\r\n//   collection,\r\n// } from \"firebase/firestore\";\r\n// import { fetchCartItems } from \"./cartSlice\";\r\n\r\n// const savedItemsSlice = createSlice({\r\n//   name: \"savedItems\",\r\n//   initialState: {\r\n//     savedItems: [],\r\n//     status: STATUS.IDLE,\r\n//   },\r\n//   reducers: {\r\n//     setsavedItems: (state, action) => ({\r\n//       ...state,\r\n//       savedItems: action.payload,\r\n//     }),\r\n\r\n//     setStatus: (state, action) => ({\r\n//       ...state,\r\n//       status: action.payload,\r\n//     }),\r\n//   },\r\n// });\r\n\r\n// export const { setsavedItems, setStatus } = savedItemsSlice.actions;\r\n\r\n// export default savedItemsSlice.reducer;\r\n\r\n// const savedItemsColl = collection(db, \"saveditems\");\r\n\r\n// export const fetchSavedItems = () => {\r\n//   return function fetchSavedItemsThunk(dispatch) {\r\n//     dispatch(setStatus(STATUS.LOADING));\r\n//     getDocs(savedItemsColl)\r\n//       .then((snapshot) => {\r\n//         const payload = snapshot.docs.map((doc) => ({\r\n//           id: doc.id,\r\n//           ...doc.data(),\r\n//         }));\r\n//         dispatch(setsavedItems(payload));\r\n//         dispatch(setStatus(STATUS.IDLE));\r\n//       })\r\n//       .catch(() => dispatch(setStatus(STATUS.ERROR)));\r\n//   };\r\n// };\r\n\r\n// export const saveForLater =\r\n//   ({ id, title, price, image }) =>\r\n//   (dispatch) => {\r\n//     const cartItemDoc = doc(db, \"cartitems\", id);\r\n//     dispatch(setStatus(STATUS.LOADING));\r\n//     deleteDoc(cartItemDoc)\r\n//       .then(() => {\r\n//         dispatch(fetchCartItems());\r\n//         const savedItemDoc = doc(db, \"saveditems\", id);\r\n//         getDoc(savedItemDoc).then((docSnap) => {\r\n//           if (!docSnap.exists()) {\r\n//             setDoc(doc(savedItemsColl, id), {\r\n//               title,\r\n//               price,\r\n//               image,\r\n//             });\r\n//             dispatch(fetchSavedItems());\r\n//           }\r\n//         });\r\n//       })\r\n//       .catch(() => dispatch(setStatus(STATUS.ERROR)));\r\n//   };\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}