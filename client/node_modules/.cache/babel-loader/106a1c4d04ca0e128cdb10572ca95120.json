{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { auth, provider } from \"../db/firebase\";\nimport { signInWithPopup, signOut, GoogleAuthProvider } from \"firebase/auth\";\nimport { STATUS } from \"../utils/enums\";\nimport { getItem, removeItem, setItem } from \"../utils/localstorage\";\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    user: getItem(\"user\") || null,\n    status: STATUS.IDLE\n  },\n  reducers: {\n    login: (state, action) => ({ ...state,\n      user: action.payload\n    }),\n    logout: (state, action) => ({ ...state,\n      user: null\n    }),\n    setStatus: (state, action) => ({ ...state,\n      status: action.payload\n    })\n  }\n});\nexport const {\n  login,\n  logout,\n  setStatus\n} = authSlice.actions;\nexport default authSlice.reducer;\nexport const loginWithGoogle = () => dispatch => {\n  dispatch(setStatus(STATUS.LOADING));\n  signInWithPopup(auth, provider).then(result => {\n    // This gives you a Google Access Token. You can use it to access the Google API.\n    const credential = GoogleAuthProvider.credentialFromResult(result);\n    const token = credential.accessToken; // The signed-in user info.\n\n    const user = result.user;\n    const newUser = {\n      name: user.displayName,\n      email: user.email,\n      phone: user.phoneNumber,\n      avatar: user.photoURL\n    };\n    setItem(\"user\", newUser);\n    dispatch(login(newUser));\n    dispatch(setStatus(STATUS.IDLE));\n  }).catch(() => dispatch(setStatus(STATUS.ERROR)));\n};\nexport const logoutWithGoogle = () => dispatch => {\n  dispatch(setStatus(STATUS.LOADING));\n  signOut(auth).then(() => {\n    removeItem(\"user\");\n    dispatch(logout());\n    dispatch(setStatus(STATUS.IDLE));\n  }).catch(() => dispatch(setStatus(STATUS.ERROR)));\n};","map":{"version":3,"names":["createSlice","auth","provider","signInWithPopup","signOut","GoogleAuthProvider","STATUS","getItem","removeItem","setItem","authSlice","name","initialState","user","status","IDLE","reducers","login","state","action","payload","logout","setStatus","actions","reducer","loginWithGoogle","dispatch","LOADING","then","result","credential","credentialFromResult","token","accessToken","newUser","displayName","email","phone","phoneNumber","avatar","photoURL","catch","ERROR","logoutWithGoogle"],"sources":["D:/EDU/PROJECTS/Clones/amazon-clone/client/src/redux/authSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { auth, provider } from \"../db/firebase\";\r\nimport { signInWithPopup, signOut, GoogleAuthProvider } from \"firebase/auth\";\r\nimport { STATUS } from \"../utils/enums\";\r\nimport { getItem, removeItem, setItem } from \"../utils/localstorage\";\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: {\r\n    user: getItem(\"user\") || null,\r\n    status: STATUS.IDLE,\r\n  },\r\n\r\n  reducers: {\r\n    login: (state, action) => ({\r\n      ...state,\r\n      user: action.payload,\r\n    }),\r\n\r\n    logout: (state, action) => ({\r\n      ...state,\r\n      user: null,\r\n    }),\r\n\r\n    setStatus: (state, action) => ({\r\n      ...state,\r\n      status: action.payload,\r\n    }),\r\n  },\r\n});\r\n\r\nexport const { login, logout, setStatus } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n\r\nexport const loginWithGoogle = () => (dispatch) => {\r\n  dispatch(setStatus(STATUS.LOADING));\r\n  signInWithPopup(auth, provider)\r\n    .then((result) => {\r\n      // This gives you a Google Access Token. You can use it to access the Google API.\r\n      const credential = GoogleAuthProvider.credentialFromResult(result);\r\n      const token = credential.accessToken;\r\n      // The signed-in user info.\r\n      const user = result.user;\r\n      const newUser = {\r\n        name: user.displayName,\r\n        email: user.email,\r\n        phone: user.phoneNumber,\r\n        avatar: user.photoURL,\r\n      };\r\n      setItem(\"user\", newUser);\r\n      dispatch(login(newUser));\r\n      dispatch(setStatus(STATUS.IDLE));\r\n    })\r\n    .catch(() => dispatch(setStatus(STATUS.ERROR)));\r\n};\r\n\r\nexport const logoutWithGoogle = () => (dispatch) => {\r\n  dispatch(setStatus(STATUS.LOADING));\r\n\r\n  signOut(auth)\r\n    .then(() => {\r\n      removeItem(\"user\");\r\n      dispatch(logout());\r\n      dispatch(setStatus(STATUS.IDLE));\r\n    })\r\n    .catch(() => dispatch(setStatus(STATUS.ERROR)));\r\n};\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,gBAA/B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,kBAAnC,QAA6D,eAA7D;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,OAA9B,QAA6C,uBAA7C;AAEA,MAAMC,SAAS,GAAGV,WAAW,CAAC;EAC5BW,IAAI,EAAE,MADsB;EAE5BC,YAAY,EAAE;IACZC,IAAI,EAAEN,OAAO,CAAC,MAAD,CAAP,IAAmB,IADb;IAEZO,MAAM,EAAER,MAAM,CAACS;EAFH,CAFc;EAO5BC,QAAQ,EAAE;IACRC,KAAK,EAAE,CAACC,KAAD,EAAQC,MAAR,MAAoB,EACzB,GAAGD,KADsB;MAEzBL,IAAI,EAAEM,MAAM,CAACC;IAFY,CAApB,CADC;IAMRC,MAAM,EAAE,CAACH,KAAD,EAAQC,MAAR,MAAoB,EAC1B,GAAGD,KADuB;MAE1BL,IAAI,EAAE;IAFoB,CAApB,CANA;IAWRS,SAAS,EAAE,CAACJ,KAAD,EAAQC,MAAR,MAAoB,EAC7B,GAAGD,KAD0B;MAE7BJ,MAAM,EAAEK,MAAM,CAACC;IAFc,CAApB;EAXH;AAPkB,CAAD,CAA7B;AAyBA,OAAO,MAAM;EAAEH,KAAF;EAASI,MAAT;EAAiBC;AAAjB,IAA+BZ,SAAS,CAACa,OAA/C;AACP,eAAeb,SAAS,CAACc,OAAzB;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAOC,QAAD,IAAc;EACjDA,QAAQ,CAACJ,SAAS,CAAChB,MAAM,CAACqB,OAAR,CAAV,CAAR;EACAxB,eAAe,CAACF,IAAD,EAAOC,QAAP,CAAf,CACG0B,IADH,CACSC,MAAD,IAAY;IAChB;IACA,MAAMC,UAAU,GAAGzB,kBAAkB,CAAC0B,oBAAnB,CAAwCF,MAAxC,CAAnB;IACA,MAAMG,KAAK,GAAGF,UAAU,CAACG,WAAzB,CAHgB,CAIhB;;IACA,MAAMpB,IAAI,GAAGgB,MAAM,CAAChB,IAApB;IACA,MAAMqB,OAAO,GAAG;MACdvB,IAAI,EAAEE,IAAI,CAACsB,WADG;MAEdC,KAAK,EAAEvB,IAAI,CAACuB,KAFE;MAGdC,KAAK,EAAExB,IAAI,CAACyB,WAHE;MAIdC,MAAM,EAAE1B,IAAI,CAAC2B;IAJC,CAAhB;IAMA/B,OAAO,CAAC,MAAD,EAASyB,OAAT,CAAP;IACAR,QAAQ,CAACT,KAAK,CAACiB,OAAD,CAAN,CAAR;IACAR,QAAQ,CAACJ,SAAS,CAAChB,MAAM,CAACS,IAAR,CAAV,CAAR;EACD,CAhBH,EAiBG0B,KAjBH,CAiBS,MAAMf,QAAQ,CAACJ,SAAS,CAAChB,MAAM,CAACoC,KAAR,CAAV,CAjBvB;AAkBD,CApBM;AAsBP,OAAO,MAAMC,gBAAgB,GAAG,MAAOjB,QAAD,IAAc;EAClDA,QAAQ,CAACJ,SAAS,CAAChB,MAAM,CAACqB,OAAR,CAAV,CAAR;EAEAvB,OAAO,CAACH,IAAD,CAAP,CACG2B,IADH,CACQ,MAAM;IACVpB,UAAU,CAAC,MAAD,CAAV;IACAkB,QAAQ,CAACL,MAAM,EAAP,CAAR;IACAK,QAAQ,CAACJ,SAAS,CAAChB,MAAM,CAACS,IAAR,CAAV,CAAR;EACD,CALH,EAMG0B,KANH,CAMS,MAAMf,QAAQ,CAACJ,SAAS,CAAChB,MAAM,CAACoC,KAAR,CAAV,CANvB;AAOD,CAVM"},"metadata":{},"sourceType":"module"}