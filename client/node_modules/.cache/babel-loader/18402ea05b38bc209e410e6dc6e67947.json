{"ast":null,"code":"// import { createSlice } from \"@reduxjs/toolkit\";\n// import { db } from \"../db/firebase\";\n// import { collection, getDocs } from \"firebase/firestore\";\n// import { STATUS } from \"../utils/enums\";\n// const productsSlice = createSlice({\n//   name: \"products\",\n//   initialState: {\n//     products: [],\n//     status: STATUS.IDLE,\n//   },\n//   reducers: {\n//     setProducts: (state, action) => ({\n//       ...state,\n//       products: action.payload,\n//     }),\n//     setStatus: (state, action) => ({\n//       ...state,\n//       status: action.payload,\n//     }),\n//   },\n// });\n// export const { setProducts, setStatus } = productsSlice.actions;\n// export default productsSlice.reducer;\n// export const fetchProducts = () => {\n//   return function fetchProductsThunk(dispatch) {\n//     // dispatching loading status\n//     dispatch(setStatus(STATUS.LOADING));\n//     // fetching data from firestore db\n//     const productsColl = collection(db, \"products\");\n//     getDocs(productsColl)\n//       .then((snapshot) => {\n//         const payload = snapshot.docs.map((pro) => ({\n//           id: pro.id,\n//           ...pro.data(),\n//         }));\n//         dispatch(setProducts(payload));\n//         dispatch(setStatus(STATUS.IDLE));\n//       })\n//       .catch((err) => dispatch(setStatus(STATUS.ERROR)));\n//   };\n// };","map":{"version":3,"names":[],"sources":["D:/EDU/PROJECTS/Clones/amazon-clone/client/src/redux/productsSlice.js"],"sourcesContent":["// import { createSlice } from \"@reduxjs/toolkit\";\r\n// import { db } from \"../db/firebase\";\r\n// import { collection, getDocs } from \"firebase/firestore\";\r\n// import { STATUS } from \"../utils/enums\";\r\n\r\n// const productsSlice = createSlice({\r\n//   name: \"products\",\r\n//   initialState: {\r\n//     products: [],\r\n//     status: STATUS.IDLE,\r\n//   },\r\n//   reducers: {\r\n//     setProducts: (state, action) => ({\r\n//       ...state,\r\n//       products: action.payload,\r\n//     }),\r\n//     setStatus: (state, action) => ({\r\n//       ...state,\r\n//       status: action.payload,\r\n//     }),\r\n//   },\r\n// });\r\n\r\n// export const { setProducts, setStatus } = productsSlice.actions;\r\n// export default productsSlice.reducer;\r\n\r\n// export const fetchProducts = () => {\r\n//   return function fetchProductsThunk(dispatch) {\r\n//     // dispatching loading status\r\n//     dispatch(setStatus(STATUS.LOADING));\r\n//     // fetching data from firestore db\r\n//     const productsColl = collection(db, \"products\");\r\n//     getDocs(productsColl)\r\n//       .then((snapshot) => {\r\n//         const payload = snapshot.docs.map((pro) => ({\r\n//           id: pro.id,\r\n//           ...pro.data(),\r\n//         }));\r\n//         dispatch(setProducts(payload));\r\n//         dispatch(setStatus(STATUS.IDLE));\r\n//       })\r\n//       .catch((err) => dispatch(setStatus(STATUS.ERROR)));\r\n//   };\r\n// };\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}