{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { STATUS } from \"../utils/enums\";\nimport { db } from \"../db/firebase\";\nimport { doc, setDoc, getDoc, getDocs, updateDoc, deleteDoc, collection, query, where, onSnapshot, arrayUnion } from \"firebase/firestore\";\nimport { getItem, setItem } from \"../utils/localstorage\"; // import firebase from \"firbase\";\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    cartItems: [],\n    status: STATUS.IDLE\n  },\n  reducers: {\n    setCartItems: (state, action) => ({ ...state,\n      cartItems: action.payload\n    }),\n    // In redux toolkit we can directly mutate the state also\n    // setCartItems: (state, action) => {\n    //   state.cartItems = action.payload;\n    // },\n    setStatus: (state, action) => ({ ...state,\n      status: action.payload\n    })\n  }\n});\nexport const {\n  setCartItems,\n  setStatus\n} = cartSlice.actions;\nexport default cartSlice.reducer;\nconst cartItemsColl = collection(db, \"cartitems\");\nexport const fetchCartItems = email => dispatch => {\n  dispatch(setStatus(STATUS.LOADING));\n\n  if (!email) {\n    dispatch(setCartItems(getItem(\"ls_cartData\") || []));\n    dispatch(setStatus(STATUS.IDLE));\n  } else {\n    onSnapshot(cartItemsColl, snapshot => {\n      let payload = [];\n      console.log(snapshot.docs); //array of cart docs\n\n      snapshot.docs.map(productDoc => {\n        const filter = productDoc.data().users.filter(el => el.email === email);\n        console.log(filter);\n\n        if (filter.length) {\n          // const test = [...payload];\n          // getDoc(doc(db, \"products\", productDoc.id)).then((snap) => {\n          //   // store\n          //   // payload.push(snap.data());\n          //   // test.push(snap.data());\n          //   // console.log(payload);\n          //   testing(snap.data());\n          // });\n          onSnapshot(doc(db, \"products\", productDoc.id), d => {\n            payload = Object.assign([], payload);\n            payload.push({\n              cartQty: filter[0].qty,\n              ...d.data()\n            });\n          }); //   console.log(d.data());\n          //\n          //   payload.push(d.data());\n          // payload = [\n          //   ...payload,\n          //   // {\n          //   //   ...d.data(),\n          //   //   cartQty: filter[0].qty,\n          //   // },\n          // ];\n          // });\n        }\n      });\n      console.log(payload);\n      dispatch(setCartItems(payload));\n    }, err => dispatch(setStatus(STATUS.ERROR)));\n  }\n}; // console.log(payload);\n// console.log(ids);\n// console.log(ids);\n// const idsFilter = query(\n//   collection(db, \"products\"),\n//   where(\"__name__\", \"in\", ids)\n// );\n// onSnapshot(idsFilter, (snapshot) => {\n//   const payload = snapshot.docs.map((doc) => ({\n//     id: doc.id,\n//     ...doc.data(),\n//   }));\n// dispatch(setCartItems(payload));\n// dispatch(setStatus(STATUS.IDLE));\n// (err) => () => dispatch(setStatus(STATUS.ERROR))\n// );\n// }\n// getDocs(q)\n//   .then((snapshot) => {\n//     // dispatch(setProducts(payload));\n//     snapshot.docs.map((doc) => {\n//       console.log(doc.id);\n// onSnapshot(doc(db, \"products\", doc.id), (doc) => console.log(doc));\n// .then((docSnap) =>\n//   console.log(docSnap.data())\n// );\n// const productsColl = collection(db, \"products\");\n// const q2 = query(productsColl, where(\"id\", \"==\", doc.id));\n// getDocs(q2).then((snapshot) => {\n//   const payload = snapshot.docs.map((pro) => ({\n//     id: pro.id,\n//     ...pro.data(),\n//   }));\n// });\n// id: doc.id,\n// ...doc.data(),\n// });\n// console.log(payload1);\n//\n//   },)\n//   // .catch(() => dispatch(setStatus(STATUS.ERROR)));\n// }\n// let payload = [];\n// const store = (payload, data) => {\n//   if (data) payload.push(data);\n//   return payload;\n// };\n\nexport const addToCart = (id, email) => {\n  return function addTocartThunk(dispatch) {\n    dispatch(setStatus(STATUS.LOADING));\n\n    if (email) {\n      const cartItemDoc = doc(db, \"cartitems\", id);\n      getDoc(cartItemDoc).then(docSnap => {\n        if (docSnap.exists()) {\n          const idx = docSnap.data().users.findIndex(el => el.email === email);\n          console.log(idx);\n\n          if (idx > -1) {\n            const updatedData = docSnap.data().users.map((el, i) => i === idx ? { ...el,\n              qty: el.qty += 1\n            } : el);\n            updateDoc(cartItemDoc, {\n              users: updatedData\n            });\n          } else {\n            updateDoc(cartItemDoc, {\n              users: arrayUnion({\n                email,\n                qty: 1,\n                id\n              })\n            });\n          }\n        } else {\n          setDoc(doc(cartItemsColl, id), {\n            users: [{\n              email,\n              qty: 1,\n              id\n            }]\n          });\n        }\n\n        dispatch(fetchCartItems(email));\n      }).catch(() => dispatch(setStatus(STATUS.ERROR)));\n    } else {\n      let flag = false;\n      let ls_cartData = getItem(\"ls_cartData\") || [];\n\n      if (ls_cartData.length) {\n        ls_cartData.forEach(item => {\n          if (item.id == id) {\n            item.qty += 1;\n            flag = true;\n          }\n        });\n      }\n\n      !flag && ls_cartData.push({\n        id,\n        qty: 1\n      });\n      setItem(\"ls_cartData\", ls_cartData);\n      dispatch(fetchCartItems(email));\n    }\n  };\n};\nexport const changeCartItemQty = (id, newQty, email) => dispatch => {\n  console.log(newQty);\n  const qtyItemDoc = doc(db, \"cartitems\", id);\n  dispatch(setStatus(STATUS.LOADING));\n  updateDoc(qtyItemDoc, {\n    qty: +newQty\n  }).then(() => {\n    dispatch(fetchCartItems(email));\n  }).catch(() => dispatch(setStatus(STATUS.ERROR)));\n};\nexport const deleteFromCart = (id, email) => dispatch => {\n  const qtyItemDoc = doc(db, \"cartitems\", id);\n  dispatch(setStatus(STATUS.LOADING));\n  deleteDoc(qtyItemDoc).then(() => {\n    dispatch(fetchCartItems(email));\n  }).catch(() => dispatch(setStatus(STATUS.ERROR)));\n};","map":{"version":3,"names":["createSlice","STATUS","db","doc","setDoc","getDoc","getDocs","updateDoc","deleteDoc","collection","query","where","onSnapshot","arrayUnion","getItem","setItem","cartSlice","name","initialState","cartItems","status","IDLE","reducers","setCartItems","state","action","payload","setStatus","actions","reducer","cartItemsColl","fetchCartItems","email","dispatch","LOADING","snapshot","console","log","docs","map","productDoc","filter","data","users","el","length","id","d","Object","assign","push","cartQty","qty","err","ERROR","addToCart","addTocartThunk","cartItemDoc","then","docSnap","exists","idx","findIndex","updatedData","i","catch","flag","ls_cartData","forEach","item","changeCartItemQty","newQty","qtyItemDoc","deleteFromCart"],"sources":["D:/EDU/PROJECTS/Clones/amazon-clone/client/src/redux/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { STATUS } from \"../utils/enums\";\r\nimport { db } from \"../db/firebase\";\r\nimport {\r\n  doc,\r\n  setDoc,\r\n  getDoc,\r\n  getDocs,\r\n  updateDoc,\r\n  deleteDoc,\r\n  collection,\r\n  query,\r\n  where,\r\n  onSnapshot,\r\n  arrayUnion,\r\n} from \"firebase/firestore\";\r\nimport { getItem, setItem } from \"../utils/localstorage\";\r\n// import firebase from \"firbase\";\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    cartItems: [],\r\n    status: STATUS.IDLE,\r\n  },\r\n  reducers: {\r\n    setCartItems: (state, action) => ({\r\n      ...state,\r\n      cartItems: action.payload,\r\n    }),\r\n\r\n    // In redux toolkit we can directly mutate the state also\r\n    // setCartItems: (state, action) => {\r\n    //   state.cartItems = action.payload;\r\n    // },\r\n\r\n    setStatus: (state, action) => ({\r\n      ...state,\r\n      status: action.payload,\r\n    }),\r\n  },\r\n});\r\n\r\nexport const { setCartItems, setStatus } = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;\r\n\r\nconst cartItemsColl = collection(db, \"cartitems\");\r\n\r\nexport const fetchCartItems = (email) => (dispatch) => {\r\n  dispatch(setStatus(STATUS.LOADING));\r\n  if (!email) {\r\n    dispatch(setCartItems(getItem(\"ls_cartData\") || []));\r\n    dispatch(setStatus(STATUS.IDLE));\r\n  } else {\r\n    onSnapshot(\r\n      cartItemsColl,\r\n      (snapshot) => {\r\n        let payload = [];\r\n        console.log(snapshot.docs); //array of cart docs\r\n        snapshot.docs.map((productDoc) => {\r\n          const filter = productDoc\r\n            .data()\r\n            .users.filter((el) => el.email === email);\r\n\r\n          console.log(filter);\r\n          if (filter.length) {\r\n            // const test = [...payload];\r\n            // getDoc(doc(db, \"products\", productDoc.id)).then((snap) => {\r\n            //   // store\r\n            //   // payload.push(snap.data());\r\n            //   // test.push(snap.data());\r\n            //   // console.log(payload);\r\n            //   testing(snap.data());\r\n            // });\r\n            onSnapshot(doc(db, \"products\", productDoc.id), (d) => {\r\n              payload = Object.assign([], payload);\r\n              payload.push({ cartQty: filter[0].qty, ...d.data() });\r\n            });\r\n            //   console.log(d.data());\r\n            //\r\n            //   payload.push(d.data());\r\n            // payload = [\r\n            //   ...payload,\r\n            //   // {\r\n            //   //   ...d.data(),\r\n            //   //   cartQty: filter[0].qty,\r\n            //   // },\r\n            // ];\r\n            // });\r\n          }\r\n        });\r\n        console.log(payload);\r\n        dispatch(setCartItems(payload));\r\n      },\r\n      (err) => dispatch(setStatus(STATUS.ERROR))\r\n    );\r\n  }\r\n};\r\n\r\n// console.log(payload);\r\n// console.log(ids);\r\n// console.log(ids);\r\n// const idsFilter = query(\r\n//   collection(db, \"products\"),\r\n//   where(\"__name__\", \"in\", ids)\r\n// );\r\n// onSnapshot(idsFilter, (snapshot) => {\r\n//   const payload = snapshot.docs.map((doc) => ({\r\n//     id: doc.id,\r\n//     ...doc.data(),\r\n//   }));\r\n// dispatch(setCartItems(payload));\r\n// dispatch(setStatus(STATUS.IDLE));\r\n// (err) => () => dispatch(setStatus(STATUS.ERROR))\r\n// );\r\n// }\r\n// getDocs(q)\r\n//   .then((snapshot) => {\r\n//     // dispatch(setProducts(payload));\r\n\r\n//     snapshot.docs.map((doc) => {\r\n//       console.log(doc.id);\r\n// onSnapshot(doc(db, \"products\", doc.id), (doc) => console.log(doc));\r\n// .then((docSnap) =>\r\n//   console.log(docSnap.data())\r\n// );\r\n// const productsColl = collection(db, \"products\");\r\n// const q2 = query(productsColl, where(\"id\", \"==\", doc.id));\r\n// getDocs(q2).then((snapshot) => {\r\n//   const payload = snapshot.docs.map((pro) => ({\r\n//     id: pro.id,\r\n//     ...pro.data(),\r\n//   }));\r\n\r\n// });\r\n\r\n// id: doc.id,\r\n\r\n// ...doc.data(),\r\n// });\r\n// console.log(payload1);\r\n//\r\n//   },)\r\n//   // .catch(() => dispatch(setStatus(STATUS.ERROR)));\r\n// }\r\n\r\n// let payload = [];\r\n// const store = (payload, data) => {\r\n//   if (data) payload.push(data);\r\n//   return payload;\r\n// };\r\n\r\nexport const addToCart = (id, email) => {\r\n  return function addTocartThunk(dispatch) {\r\n    dispatch(setStatus(STATUS.LOADING));\r\n    if (email) {\r\n      const cartItemDoc = doc(db, \"cartitems\", id);\r\n      getDoc(cartItemDoc)\r\n        .then((docSnap) => {\r\n          if (docSnap.exists()) {\r\n            const idx = docSnap\r\n              .data()\r\n              .users.findIndex((el) => el.email === email);\r\n            console.log(idx);\r\n            if (idx > -1) {\r\n              const updatedData = docSnap\r\n                .data()\r\n                .users.map((el, i) =>\r\n                  i === idx ? { ...el, qty: (el.qty += 1) } : el\r\n                );\r\n              updateDoc(cartItemDoc, {\r\n                users: updatedData,\r\n              });\r\n            } else {\r\n              updateDoc(cartItemDoc, {\r\n                users: arrayUnion({\r\n                  email,\r\n                  qty: 1,\r\n                  id,\r\n                }),\r\n              });\r\n            }\r\n          } else {\r\n            setDoc(doc(cartItemsColl, id), {\r\n              users: [\r\n                {\r\n                  email,\r\n                  qty: 1,\r\n                  id,\r\n                },\r\n              ],\r\n            });\r\n          }\r\n          dispatch(fetchCartItems(email));\r\n        })\r\n        .catch(() => dispatch(setStatus(STATUS.ERROR)));\r\n    } else {\r\n      let flag = false;\r\n      let ls_cartData = getItem(\"ls_cartData\") || [];\r\n      if (ls_cartData.length) {\r\n        ls_cartData.forEach((item) => {\r\n          if (item.id == id) {\r\n            item.qty += 1;\r\n            flag = true;\r\n          }\r\n        });\r\n      }\r\n      !flag && ls_cartData.push({ id, qty: 1 });\r\n      setItem(\"ls_cartData\", ls_cartData);\r\n      dispatch(fetchCartItems(email));\r\n    }\r\n  };\r\n};\r\n\r\nexport const changeCartItemQty = (id, newQty, email) => (dispatch) => {\r\n  console.log(newQty);\r\n  const qtyItemDoc = doc(db, \"cartitems\", id);\r\n  dispatch(setStatus(STATUS.LOADING));\r\n  updateDoc(qtyItemDoc, { qty: +newQty })\r\n    .then(() => {\r\n      dispatch(fetchCartItems(email));\r\n    })\r\n    .catch(() => dispatch(setStatus(STATUS.ERROR)));\r\n};\r\n\r\nexport const deleteFromCart = (id, email) => (dispatch) => {\r\n  const qtyItemDoc = doc(db, \"cartitems\", id);\r\n  dispatch(setStatus(STATUS.LOADING));\r\n  deleteDoc(qtyItemDoc)\r\n    .then(() => {\r\n      dispatch(fetchCartItems(email));\r\n    })\r\n    .catch(() => dispatch(setStatus(STATUS.ERROR)));\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}